class Solution {
public:
    int getMaxLen(vector<int>& nums) {
        int n = nums.size();
        // pos_len will keep track of maximum length of subarray with positive product
        int pos_len = 0, neg_len = 0, ans = 0;
        for(int i = 0; i < n; i++) {
            if(nums[i] == 0)  {
                pos_len = 0;
                neg_len = 0;
            }
            else if(nums[i] > 0) {
                pos_len++;
                if(neg_len != 0) {
                    // multiply negative number will result in negative number, so neg_len increases.
                    neg_len++;
                }
            }
            else if(nums[i] < 0) {
                int prev_neg_len = neg_len;
                neg_len = pos_len + 1;
                if(prev_neg_len == 0)  {
                    pos_len = 0;
                }
                else {
                    pos_len = prev_neg_len + 1;
                }
            }
            ans = max(ans, pos_len);
        }
        return ans;
    }
};
